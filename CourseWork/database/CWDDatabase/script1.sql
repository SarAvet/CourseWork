SET SQLBLANKLINES ON
ALTER TABLE LOCALITY 
DROP CONSTRAINT LOCALITY_COUNTRY_FK;

ALTER TABLE PLATFORM 
DROP CONSTRAINT PLATFORM_STATION_FK;

ALTER TABLE SCHEDULE 
DROP CONSTRAINT SCHEDULE_PLATFORM_FK;

ALTER TABLE SCHEDULE 
DROP CONSTRAINT SCHEDULE_TRAIN_FK;

ALTER TABLE STATION 
DROP CONSTRAINT STATION_LOCALITY_FK;

ALTER TABLE TRAIN_COMPOSITION 
DROP CONSTRAINT TRAIN_COMPOSITION_FK;

ALTER TABLE TRAIN_COMPOSITION 
DROP CONSTRAINT TRAIN_COMPOSITION_TRAIN_FK;

DROP TABLE CARRIAGE_TYPE;

DROP SEQUENCE CARRIAGE_TYPE_SEQ;

DROP TABLE COUNTRY;

DROP TABLE LOCALITY;

DROP SEQUENCE LOCALITY_SEQ;

DROP TABLE PLATFORM;

DROP TABLE SCHEDULE;

DROP SEQUENCE SCHEDULE_SEQ;

DROP TABLE STATION;

DROP TABLE TRAIN;

DROP TABLE TRAIN_COMPOSITION;

DROP SEQUENCE TRAIN_COMPOSITION_SEQ;

CREATE TABLE CARRIAGE_TYPE 
(
  NAME VARCHAR2(40) NOT NULL 
, COST DOUBLE PRECISION NOT NULL 
, ABBREVIATION VARCHAR2(20) NOT NULL 
, CODE NUMBER NOT NULL 
, CONSTRAINT CARRIAGE_TYPE_PK PRIMARY KEY 
  (
    NAME 
  , ABBREVIATION 
  )
  ENABLE 
);

CREATE TABLE COUNTRY 
(
  CODE NUMBER NOT NULL 
, NAME VARCHAR2(120) NOT NULL 
, CONSTRAINT COUNTRY_PK PRIMARY KEY 
  (
    CODE 
  )
  ENABLE 
);

CREATE TABLE LOCALITY 
(
  LOCALITY_CODE NUMBER NOT NULL 
, COUNTRY_CODE NUMBER NOT NULL 
, NAME VARCHAR2(120) NOT NULL 
, ID NUMBER NOT NULL 
, CONSTRAINT LOCALITY_PK PRIMARY KEY 
  (
    LOCALITY_CODE 
  , COUNTRY_CODE 
  )
  ENABLE 
);

CREATE TABLE PLATFORM 
(
  STATION_CODE NUMBER NOT NULL 
, CODE NUMBER NOT NULL 
, PLATFORM_NUMBER VARCHAR2(20) NOT NULL 
, CONSTRAINT PLATFORM_PK PRIMARY KEY 
  (
    CODE 
  )
  ENABLE 
);

CREATE TABLE SCHEDULE 
(
  ARRIVAL_DATETIME TIMESTAMP NOT NULL 
, PLATFORM_CODE NUMBER NOT NULL 
, TRAIN_CODE NUMBER NOT NULL 
, CODE NUMBER NOT NULL 
, CONSTRAINT SCHEDULE_PK PRIMARY KEY 
  (
    ARRIVAL_DATETIME 
  , PLATFORM_CODE 
  )
  ENABLE 
);

CREATE TABLE STATION 
(
  CODE NUMBER NOT NULL 
, NAME VARCHAR2(120) NOT NULL 
, LOCALITY_ID NUMBER NOT NULL 
, ABBREVIATION VARCHAR2(20) 
, CONSTRAINT STATION_PK PRIMARY KEY 
  (
    CODE 
  )
  ENABLE 
);

CREATE TABLE TRAIN 
(
  CODE NUMBER NOT NULL 
, CONSTRAINT TRAIN_PK PRIMARY KEY 
  (
    CODE 
  )
  ENABLE 
);

CREATE TABLE TRAIN_COMPOSITION 
(
  ID NUMBER NOT NULL 
, CARRIAGE_NUMBER NUMBER NOT NULL 
, TRAIN_CODE NUMBER NOT NULL 
, CARRIAGE_TYPE NUMBER NOT NULL 
, CONSTRAINT TRAIN_COMPOSITION_PK PRIMARY KEY 
  (
    CARRIAGE_NUMBER 
  , TRAIN_CODE 
  , CARRIAGE_TYPE 
  )
  ENABLE 
);

ALTER TABLE CARRIAGE_TYPE
ADD CONSTRAINT CARRIAGE_TYPE_UK1 UNIQUE 
(
  CODE 
)
ENABLE;

ALTER TABLE LOCALITY
ADD CONSTRAINT LOCALITY_UK1 UNIQUE 
(
  ID 
)
ENABLE;

ALTER TABLE TRAIN_COMPOSITION
ADD CONSTRAINT TRAIN_COMPOSITION_UK1 UNIQUE 
(
  ID 
)
ENABLE;

ALTER TABLE LOCALITY
ADD CONSTRAINT LOCALITY_COUNTRY_FK FOREIGN KEY
(
  COUNTRY_CODE 
)
REFERENCES COUNTRY
(
  CODE 
)
ENABLE;

ALTER TABLE PLATFORM
ADD CONSTRAINT PLATFORM_STATION_FK FOREIGN KEY
(
  STATION_CODE 
)
REFERENCES STATION
(
  CODE 
)
ENABLE;

ALTER TABLE SCHEDULE
ADD CONSTRAINT SCHEDULE_PLATFORM_FK FOREIGN KEY
(
  TRAIN_CODE 
)
REFERENCES PLATFORM
(
  CODE 
)
ENABLE;

ALTER TABLE SCHEDULE
ADD CONSTRAINT SCHEDULE_TRAIN_FK FOREIGN KEY
(
  TRAIN_CODE 
)
REFERENCES TRAIN
(
  CODE 
)
ENABLE;

ALTER TABLE STATION
ADD CONSTRAINT STATION_LOCALITY_FK FOREIGN KEY
(
  LOCALITY_ID 
)
REFERENCES LOCALITY
(
  ID 
)
ENABLE;

ALTER TABLE TRAIN_COMPOSITION
ADD CONSTRAINT TRAIN_COMPOSITION_FK FOREIGN KEY
(
  CARRIAGE_TYPE 
)
REFERENCES CARRIAGE_TYPE
(
  CODE 
)
ENABLE;

ALTER TABLE TRAIN_COMPOSITION
ADD CONSTRAINT TRAIN_COMPOSITION_TRAIN_FK FOREIGN KEY
(
  TRAIN_CODE 
)
REFERENCES TRAIN
(
  CODE 
)
ENABLE;

COMMENT ON COLUMN CARRIAGE_TYPE.NAME IS 'Название типа вагона';

COMMENT ON COLUMN CARRIAGE_TYPE.COST IS 'Стоимость вагона';

COMMENT ON COLUMN CARRIAGE_TYPE.CODE IS 'Код типа';

COMMENT ON COLUMN COUNTRY.CODE IS 'Международный код страны/государства
';

COMMENT ON COLUMN COUNTRY.NAME IS 'Название страны. Страна не может существовать без названия';

COMMENT ON COLUMN LOCALITY.LOCALITY_CODE IS 'Код (телефонный) населенного пункта';

COMMENT ON COLUMN LOCALITY.COUNTRY_CODE IS 'Код страны. Населенный пункт не может быть вне какой-то страны/государства';

COMMENT ON COLUMN LOCALITY.NAME IS 'Название населенного пункта. Населенный пункт не может быть без названия';

COMMENT ON COLUMN LOCALITY.ID IS 'Идентификатор города';

COMMENT ON COLUMN PLATFORM.STATION_CODE IS 'Код станции. Платформа без станции не может быть';

COMMENT ON COLUMN PLATFORM.CODE IS 'Код платформы';

COMMENT ON COLUMN PLATFORM.PLATFORM_NUMBER IS 'Номер платформы';

COMMENT ON COLUMN STATION.CODE IS 'Код станции';

COMMENT ON COLUMN STATION.NAME IS 'Название станции. Станция не может быть безымянной';

COMMENT ON COLUMN STATION.LOCALITY_ID IS 'Идентификатор населенного пункта';

COMMENT ON COLUMN STATION.ABBREVIATION IS 'Сокращение названия';

COMMENT ON COLUMN TRAIN.CODE IS 'Индивидуальный номер поезда';

COMMENT ON COLUMN TRAIN_COMPOSITION.ID IS 'Идентификатор состава';

COMMENT ON COLUMN TRAIN_COMPOSITION.CARRIAGE_NUMBER IS 'Номер вагона';

COMMENT ON COLUMN TRAIN_COMPOSITION.TRAIN_CODE IS 'Номер поезда';

COMMENT ON COLUMN TRAIN_COMPOSITION.CARRIAGE_TYPE IS 'Тип вагона';

CREATE SEQUENCE CARRIAGE_TYPE_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

CREATE SEQUENCE LOCALITY_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

CREATE SEQUENCE SCHEDULE_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

CREATE SEQUENCE TRAIN_COMPOSITION_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;

CREATE OR REPLACE TRIGGER CARRIAGE_TYPE_TRG 
BEFORE INSERT ON CARRIAGE_TYPE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.CODE IS NULL THEN
      SELECT CARRIAGE_TYPE_SEQ.NEXTVAL INTO :NEW.CODE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER LOCALITY_TRG 
BEFORE INSERT ON LOCALITY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT LOCALITY_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER SCHEDULE_TRG 
BEFORE INSERT ON SCHEDULE 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.CODE IS NULL THEN
      SELECT SCHEDULE_SEQ.NEXTVAL INTO :NEW.CODE FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/

CREATE OR REPLACE TRIGGER TRAIN_COMPOSITION_TRG 
BEFORE INSERT ON TRAIN_COMPOSITION 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF :NEW.ID IS NULL THEN
      SELECT TRAIN_COMPOSITION_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
